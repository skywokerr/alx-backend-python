{
	"info": {
		"_postman_id": "c1a2b3c4-d5e6-7890-abcd-ef1234567890",
		"name": "ALX Messaging App Tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_collection_id": "YOUR_COLLECTION_ID_HERE"
	},
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{auth_token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://127.0.0.1:8000/api",
			"type": "string"
		},
		{
			"key": "auth_token",
			"value": "",
			"type": "string"
		},
		{
			"key": "auth_token_user2",
			"value": "",
			"type": "string"
		},
		{
			"key": "conversation_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "user_id_1",
			"value": "",
			"type": "string",
			"description": "ID of testuser1 after creation/login"
		},
		{
			"key": "user_id_2",
			"value": "",
			"type": "string",
			"description": "ID of testuser2 after creation/login"
		}
	],
	"item": [
		{
			"name": "User Registration (Optional)",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"testuser1\",\n    \"email\": \"test1@example.com\",\n    \"password\": \"password123\",\n    \"first_name\": \"Test\",\n    \"last_name\": \"UserOne\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/users/",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "User Login (Get JWT Token)",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"testuser1\",\n    \"password\": \"password123\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/token/",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"token",
						""
					]
				}
			},
			"response": [],
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.environment.set(\"auth_token\", jsonData.access);",
							"pm.environment.set(\"refresh_token\", jsonData.refresh);",
							"",
							"// Optionally, fetch user ID if your /users/ endpoint allows filtering by username/email",
							"// Or manually set user_id_1 from database after creating testuser1"
						]
					}
				}
			]
		},
		{
			"name": "User Login (Get JWT Token for User2)",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"testuser2\",\n    \"password\": \"password123\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/token/",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"token",
						""
					]
				}
			},
			"response": [],
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.environment.set(\"auth_token_user2\", jsonData.access);",
							"// Optionally, manually set user_id_2 from database after creating testuser2"
						]
					}
				}
			]
		},
		{
			"name": "Fetch All Users (Authenticated)",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/users/",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Create a Conversation",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"participants\": [{{user_id_2}}] \n    // Assuming testuser1 (requester) is ID {{user_id_1}} and testuser2 is ID {{user_id_2}}\n    // The current user (testuser1) will be added automatically by the viewset\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/conversations/",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"conversations",
						""
					]
				}
			},
			"response": [],
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.environment.set(\"conversation_id\", jsonData.id);"
						]
					}
				}
			]
		},
		{
			"name": "Fetch My Conversations",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/conversations/",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"conversations",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Send Message (by User1)",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"conversation\": {{conversation_id}},\n    \"content\": \"Hello testuser2, this is testuser1!\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/messages/",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"messages",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Send Message (by User2)",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{auth_token_user2}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"conversation\": {{conversation_id}},\n    \"content\": \"Hi testuser1! I received your message. How are you?\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/messages/",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"messages",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Fetch Messages in Conversation (User1)",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/messages/?conversation={{conversation_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"messages",
						""
					],
					"query": [
						{
							"key": "conversation",
							"value": "{{conversation_id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Fetch Messages in Conversation (User3 - Unauthorized)",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{auth_token_user3}}",
						"type": "text",
						"disabled": true
					}
				],
				"url": {
					"raw": "{{baseUrl}}/messages/?conversation={{conversation_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"messages",
						""
					],
					"query": [
						{
							"key": "conversation",
							"value": "{{conversation_id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Fetch Messages with Pagination & Filter (Example)",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/messages/?conversation={{conversation_id}}&page=1&page_size=10&sent_at_after=2025-01-01T00:00:00Z&sender={{user_id_1}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"messages",
						""
					],
					"query": [
						{
							"key": "conversation",
							"value": "{{conversation_id}}"
						},
						{
							"key": "page",
							"value": "1"
						},
						{
							"key": "page_size",
							"value": "10"
						},
						{
							"key": "sent_at_after",
							"value": "2025-01-01T00:00:00Z",
							"description": "Adjust date as needed"
						},
						{
							"key": "sender",
							"value": "{{user_id_1}}",
							"description": "Filter by sender ID"
						}
					]
				}
			},
			"response": []
		}
	]
}